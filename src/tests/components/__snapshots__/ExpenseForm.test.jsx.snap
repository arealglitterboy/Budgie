// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should render error for invalid form submission 1`] = `
<section>
  <form
    action=""
    className="expense-form"
    onSubmit={[Function]}
  >
    <fieldset
      className="expense-form__date expense-form__fieldset"
    >
      <r
        allowSameDay={false}
        className="date-picker expense-form__date__input"
        customTimeInput={null}
        dateFormat="dd/MM/yyyy"
        dateFormatCalendar="LLLL yyyy"
        disabled={false}
        disabledKeyboardNavigation={false}
        dropdownMode="scroll"
        enableTabLoop={true}
        excludeScrollbar={true}
        focusSelectedMonth={false}
        id="date-picker"
        monthsShown={1}
        nextMonthButtonLabel="Next Month"
        nextYearButtonLabel="Next Year"
        onBlur={[Function]}
        onCalendarClose={[Function]}
        onCalendarOpen={[Function]}
        onChange={[Function]}
        onClickOutside={[Function]}
        onFocus={[Function]}
        onInputClick={[Function]}
        onInputError={[Function]}
        onKeyDown={[Function]}
        onMonthChange={[Function]}
        onSelect={[Function]}
        onYearChange={[Function]}
        preventOpenOnFocus={false}
        previousMonthButtonLabel="Previous Month"
        previousYearButtonLabel="Previous Year"
        readOnly={false}
        renderDayContents={[Function]}
        selected={2021-09-20T16:00:41.990Z}
        shouldCloseOnSelect={true}
        showFourColumnMonthYearPicker={false}
        showFullMonthYearPicker={false}
        showMonthYearPicker={false}
        showPopperArrow={true}
        showPreviousMonths={false}
        showQuarterYearPicker={false}
        showTimeInput={false}
        showTimeSelect={false}
        showTwoColumnMonthYearPicker={false}
        showYearPicker={false}
        strictParsing={false}
        timeCaption="Time"
        timeInputLabel="Time"
        timeIntervals={30}
        withPortal={false}
        yearItemNumber={12}
      />
    </fieldset>
    <label
      htmlFor="title"
    >
      Title: 
    </label>
    <input
      autoFocus={true}
      id="title"
      onChange={[Function]}
      type="text"
      value=""
    />
    <label
      htmlFor="note"
    >
      Note: 
    </label>
    <textarea
      id="note"
      onChange={[Function]}
      value=""
    />
    <label
      htmlFor="amount"
    >
      Amount: 
    </label>
    <fieldset
      className="expense-form__fieldset expense-form__amount"
    >
      <select
        onChange={[Function]}
        value="EUR"
      >
        <option
          value="EUR"
        >
          €
        </option>
        <option
          value="GBP"
        >
          £
        </option>
        <option
          value="USD"
        >
          $
        </option>
      </select>
      <input
        id="amount"
        onChange={[Function]}
        type="text"
        value=""
      />
    </fieldset>
    <button
      className="expense-form__submit"
      type="submit"
    >
      Confirm
    </button>
  </form>
</section>
`;

exports[`should render error for invalid form submission 2`] = `
<section>
  <form
    action=""
    className="expense-form"
    onSubmit={[Function]}
  >
    <fieldset
      className="expense-form__date expense-form__fieldset"
    >
      <r
        allowSameDay={false}
        className="date-picker expense-form__date__input"
        customTimeInput={null}
        dateFormat="dd/MM/yyyy"
        dateFormatCalendar="LLLL yyyy"
        disabled={false}
        disabledKeyboardNavigation={false}
        dropdownMode="scroll"
        enableTabLoop={true}
        excludeScrollbar={true}
        focusSelectedMonth={false}
        id="date-picker"
        monthsShown={1}
        nextMonthButtonLabel="Next Month"
        nextYearButtonLabel="Next Year"
        onBlur={[Function]}
        onCalendarClose={[Function]}
        onCalendarOpen={[Function]}
        onChange={[Function]}
        onClickOutside={[Function]}
        onFocus={[Function]}
        onInputClick={[Function]}
        onInputError={[Function]}
        onKeyDown={[Function]}
        onMonthChange={[Function]}
        onSelect={[Function]}
        onYearChange={[Function]}
        preventOpenOnFocus={false}
        previousMonthButtonLabel="Previous Month"
        previousYearButtonLabel="Previous Year"
        readOnly={false}
        renderDayContents={[Function]}
        selected={2021-09-20T16:00:41.990Z}
        shouldCloseOnSelect={true}
        showFourColumnMonthYearPicker={false}
        showFullMonthYearPicker={false}
        showMonthYearPicker={false}
        showPopperArrow={true}
        showPreviousMonths={false}
        showQuarterYearPicker={false}
        showTimeInput={false}
        showTimeSelect={false}
        showTwoColumnMonthYearPicker={false}
        showYearPicker={false}
        strictParsing={false}
        timeCaption="Time"
        timeInputLabel="Time"
        timeIntervals={30}
        withPortal={false}
        yearItemNumber={12}
      />
    </fieldset>
    <label
      htmlFor="title"
    >
      Title: 
    </label>
    <input
      autoFocus={true}
      id="title"
      onChange={[Function]}
      type="text"
      value=""
    />
    <label
      htmlFor="note"
    >
      Note: 
    </label>
    <textarea
      id="note"
      onChange={[Function]}
      value=""
    />
    <label
      htmlFor="amount"
    >
      Amount: 
    </label>
    <fieldset
      className="expense-form__fieldset expense-form__amount"
    >
      <select
        onChange={[Function]}
        value="EUR"
      >
        <option
          value="EUR"
        >
          €
        </option>
        <option
          value="GBP"
        >
          £
        </option>
        <option
          value="USD"
        >
          $
        </option>
      </select>
      <input
        id="amount"
        onChange={[Function]}
        type="text"
        value=""
      />
    </fieldset>
    <button
      className="expense-form__submit"
      type="submit"
    >
      Confirm
    </button>
  </form>
  <footer
    className="expense-form__error-box"
    open={true}
  >
    <h3>
      Warning!
    </h3>
    <p>
      Error, you must provide a title and an amount
    </p>
    <button
      className="expense-form__error-box__close"
      onClick={[Function]}
      value="cancel"
    >
      Close
    </button>
  </footer>
</section>
`;

exports[`should render expense form correctly 1`] = `
<section>
  <form
    action=""
    className="expense-form"
    onSubmit={[Function]}
  >
    <fieldset
      className="expense-form__date expense-form__fieldset"
    >
      <r
        allowSameDay={false}
        className="date-picker expense-form__date__input"
        customTimeInput={null}
        dateFormat="dd/MM/yyyy"
        dateFormatCalendar="LLLL yyyy"
        disabled={false}
        disabledKeyboardNavigation={false}
        dropdownMode="scroll"
        enableTabLoop={true}
        excludeScrollbar={true}
        focusSelectedMonth={false}
        id="date-picker"
        monthsShown={1}
        nextMonthButtonLabel="Next Month"
        nextYearButtonLabel="Next Year"
        onBlur={[Function]}
        onCalendarClose={[Function]}
        onCalendarOpen={[Function]}
        onChange={[Function]}
        onClickOutside={[Function]}
        onFocus={[Function]}
        onInputClick={[Function]}
        onInputError={[Function]}
        onKeyDown={[Function]}
        onMonthChange={[Function]}
        onSelect={[Function]}
        onYearChange={[Function]}
        preventOpenOnFocus={false}
        previousMonthButtonLabel="Previous Month"
        previousYearButtonLabel="Previous Year"
        readOnly={false}
        renderDayContents={[Function]}
        selected={2021-09-20T16:00:41.960Z}
        shouldCloseOnSelect={true}
        showFourColumnMonthYearPicker={false}
        showFullMonthYearPicker={false}
        showMonthYearPicker={false}
        showPopperArrow={true}
        showPreviousMonths={false}
        showQuarterYearPicker={false}
        showTimeInput={false}
        showTimeSelect={false}
        showTwoColumnMonthYearPicker={false}
        showYearPicker={false}
        strictParsing={false}
        timeCaption="Time"
        timeInputLabel="Time"
        timeIntervals={30}
        withPortal={false}
        yearItemNumber={12}
      />
    </fieldset>
    <label
      htmlFor="title"
    >
      Title: 
    </label>
    <input
      autoFocus={true}
      id="title"
      onChange={[Function]}
      type="text"
      value=""
    />
    <label
      htmlFor="note"
    >
      Note: 
    </label>
    <textarea
      id="note"
      onChange={[Function]}
      value=""
    />
    <label
      htmlFor="amount"
    >
      Amount: 
    </label>
    <fieldset
      className="expense-form__fieldset expense-form__amount"
    >
      <select
        onChange={[Function]}
        value="EUR"
      >
        <option
          value="EUR"
        >
          €
        </option>
        <option
          value="GBP"
        >
          £
        </option>
        <option
          value="USD"
        >
          $
        </option>
      </select>
      <input
        id="amount"
        onChange={[Function]}
        type="text"
        value=""
      />
    </fieldset>
    <button
      className="expense-form__submit"
      type="submit"
    >
      Confirm
    </button>
  </form>
</section>
`;

exports[`should render expense form with expense data 1`] = `
<section>
  <form
    action=""
    className="expense-form"
    onSubmit={[Function]}
  >
    <fieldset
      className="expense-form__date expense-form__fieldset"
    >
      <r
        allowSameDay={false}
        className="date-picker expense-form__date__input"
        customTimeInput={null}
        dateFormat="dd/MM/yyyy"
        dateFormatCalendar="LLLL yyyy"
        disabled={false}
        disabledKeyboardNavigation={false}
        dropdownMode="scroll"
        enableTabLoop={true}
        excludeScrollbar={true}
        focusSelectedMonth={false}
        id="date-picker"
        monthsShown={1}
        nextMonthButtonLabel="Next Month"
        nextYearButtonLabel="Next Year"
        onBlur={[Function]}
        onCalendarClose={[Function]}
        onCalendarOpen={[Function]}
        onChange={[Function]}
        onClickOutside={[Function]}
        onFocus={[Function]}
        onInputClick={[Function]}
        onInputError={[Function]}
        onKeyDown={[Function]}
        onMonthChange={[Function]}
        onSelect={[Function]}
        onYearChange={[Function]}
        preventOpenOnFocus={false}
        previousMonthButtonLabel="Previous Month"
        previousYearButtonLabel="Previous Year"
        readOnly={false}
        renderDayContents={[Function]}
        selected={2021-04-09T00:00:00.000Z}
        shouldCloseOnSelect={true}
        showFourColumnMonthYearPicker={false}
        showFullMonthYearPicker={false}
        showMonthYearPicker={false}
        showPopperArrow={true}
        showPreviousMonths={false}
        showQuarterYearPicker={false}
        showTimeInput={false}
        showTimeSelect={false}
        showTwoColumnMonthYearPicker={false}
        showYearPicker={false}
        strictParsing={false}
        timeCaption="Time"
        timeInputLabel="Time"
        timeIntervals={30}
        withPortal={false}
        yearItemNumber={12}
      />
    </fieldset>
    <label
      htmlFor="title"
    >
      Title: 
    </label>
    <input
      autoFocus={true}
      id="title"
      onChange={[Function]}
      type="text"
      value="Food"
    />
    <label
      htmlFor="note"
    >
      Note: 
    </label>
    <textarea
      id="note"
      onChange={[Function]}
      value="Bought food for mastication"
    />
    <label
      htmlFor="amount"
    >
      Amount: 
    </label>
    <fieldset
      className="expense-form__fieldset expense-form__amount"
    >
      <select
        onChange={[Function]}
        value={
          Array [
            "Food",
          ]
        }
      >
        <option
          value="EUR"
        >
          €
        </option>
        <option
          value="GBP"
        >
          £
        </option>
        <option
          value="USD"
        >
          $
        </option>
      </select>
      <input
        id="amount"
        onChange={[Function]}
        type="text"
        value="10.50"
      />
    </fieldset>
    <button
      className="expense-form__submit"
      type="submit"
    >
      Confirm
    </button>
  </form>
</section>
`;
