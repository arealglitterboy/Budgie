// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should render error for invalid form submission 1`] = `
<section>
  <form
    action=""
    className="expense-form"
    onSubmit={[Function]}
  >
    <label
      htmlFor="description"
    >
      Description: 
    </label>
    <input
      autoFocus={true}
      id="description"
      onChange={[Function]}
      type="text"
      value=""
    />
    <label
      htmlFor="note"
    >
      Note: 
    </label>
    <textarea
      id="note"
      onChange={[Function]}
      value=""
    />
    <fieldset
      className="expense-form__date expense-form__fieldset"
    >
      <withStyles(SingleDatePicker)
        anchorDirection="left"
        appendToBody={false}
        block={false}
        calendarInfoPosition="bottom"
        customCloseIcon={null}
        customInputIcon={null}
        date={"1970-01-01T00:00:00.000Z"}
        dayPickerNavigationInlineStyles={null}
        daySize={39}
        disableScroll={false}
        disabled={false}
        displayFormat={[Function]}
        enableOutsideDays={false}
        firstDayOfWeek={null}
        focused={false}
        hideKeyboardShortcutsPanel={false}
        horizontalMargin={0}
        horizontalMonthPadding={13}
        id="date"
        initialVisibleMonth={null}
        inputIconPosition="before"
        isDayBlocked={[Function]}
        isDayHighlighted={[Function]}
        isOutsideRange={[Function]}
        isRTL={false}
        keepFocusOnInput={false}
        keepOpenOnDateSelect={false}
        monthFormat="MMMM YYYY"
        navNext={null}
        navPosition="navPositionTop"
        navPrev={null}
        noBorder={false}
        numberOfMonths={1}
        onClose={[Function]}
        onDateChange={[Function]}
        onFocusChange={[Function]}
        onNextMonthClick={[Function]}
        onPrevMonthClick={[Function]}
        openDirection="down"
        orientation="horizontal"
        phrases={
          Object {
            "calendarLabel": "Calendar",
            "chooseAvailableDate": [Function],
            "clearDate": "Clear Date",
            "closeDatePicker": "Close",
            "dateIsSelected": [Function],
            "dateIsUnavailable": [Function],
            "enterKey": "Enter key",
            "escape": "Escape key",
            "hideKeyboardShortcutsPanel": "Close the shortcuts panel.",
            "homeEnd": "Home and end keys",
            "jumpToNextMonth": "Move forward to switch to the next month.",
            "jumpToPrevMonth": "Move backward to switch to the previous month.",
            "keyboardBackwardNavigationInstructions": "Navigate backward to interact with the calendar and select a date. Press the question mark key to get the keyboard shortcuts for changing dates.",
            "keyboardForwardNavigationInstructions": "Navigate forward to interact with the calendar and select a date. Press the question mark key to get the keyboard shortcuts for changing dates.",
            "keyboardShortcuts": "Keyboard Shortcuts",
            "leftArrowRightArrow": "Right and left arrow keys",
            "moveFocusByOneDay": "Move backward (left) and forward (right) by one day.",
            "moveFocusByOneMonth": "Switch months.",
            "moveFocusByOneWeek": "Move backward (up) and forward (down) by one week.",
            "moveFocustoStartAndEndOfWeek": "Go to the first or last day of a week.",
            "openThisPanel": "Open this panel.",
            "pageUpPageDown": "page up and page down keys",
            "questionMark": "Question mark",
            "returnFocusToInput": "Return to the date input field.",
            "roleDescription": "datepicker",
            "selectFocusedDate": "Select the date in focus.",
            "showKeyboardShortcutsPanel": "Open the keyboard shortcuts panel.",
            "upArrowDownArrow": "up and down arrow keys",
          }
        }
        placeholder="Date"
        readOnly={false}
        regular={false}
        renderCalendarInfo={null}
        renderDayContents={null}
        renderMonthElement={null}
        renderMonthText={null}
        renderNavNextButton={null}
        renderNavPrevButton={null}
        renderWeekHeaderElement={null}
        reopenPickerOnClearDate={false}
        required={false}
        screenReaderInputMessage=""
        showClearDate={false}
        showDefaultInputIcon={false}
        small={false}
        verticalHeight={null}
        verticalSpacing={22}
        weekDayFormat="dd"
        withFullScreenPortal={false}
        withPortal={false}
      />
    </fieldset>
    <label
      htmlFor="amount"
    >
      Amount: 
    </label>
    <fieldset
      className="expense-form__fieldset expense-form__amount"
    >
      <select
        onChange={[Function]}
        value="EUR"
      >
        <option
          value="EUR"
        >
          €
        </option>
        <option
          value="GBP"
        >
          £
        </option>
        <option
          value="USD"
        >
          $
        </option>
      </select>
      <input
        id="amount"
        onChange={[Function]}
        type="text"
        value=""
      />
    </fieldset>
    <button
      className="expense-form__submit"
      type="submit"
    >
      Confirm
    </button>
  </form>
</section>
`;

exports[`should render error for invalid form submission 2`] = `
<section>
  <form
    action=""
    className="expense-form"
    onSubmit={[Function]}
  >
    <label
      htmlFor="description"
    >
      Description: 
    </label>
    <input
      autoFocus={true}
      id="description"
      onChange={[Function]}
      type="text"
      value=""
    />
    <label
      htmlFor="note"
    >
      Note: 
    </label>
    <textarea
      id="note"
      onChange={[Function]}
      value=""
    />
    <fieldset
      className="expense-form__date expense-form__fieldset"
    >
      <withStyles(SingleDatePicker)
        anchorDirection="left"
        appendToBody={false}
        block={false}
        calendarInfoPosition="bottom"
        customCloseIcon={null}
        customInputIcon={null}
        date={"1970-01-01T00:00:00.000Z"}
        dayPickerNavigationInlineStyles={null}
        daySize={39}
        disableScroll={false}
        disabled={false}
        displayFormat={[Function]}
        enableOutsideDays={false}
        firstDayOfWeek={null}
        focused={false}
        hideKeyboardShortcutsPanel={false}
        horizontalMargin={0}
        horizontalMonthPadding={13}
        id="date"
        initialVisibleMonth={null}
        inputIconPosition="before"
        isDayBlocked={[Function]}
        isDayHighlighted={[Function]}
        isOutsideRange={[Function]}
        isRTL={false}
        keepFocusOnInput={false}
        keepOpenOnDateSelect={false}
        monthFormat="MMMM YYYY"
        navNext={null}
        navPosition="navPositionTop"
        navPrev={null}
        noBorder={false}
        numberOfMonths={1}
        onClose={[Function]}
        onDateChange={[Function]}
        onFocusChange={[Function]}
        onNextMonthClick={[Function]}
        onPrevMonthClick={[Function]}
        openDirection="down"
        orientation="horizontal"
        phrases={
          Object {
            "calendarLabel": "Calendar",
            "chooseAvailableDate": [Function],
            "clearDate": "Clear Date",
            "closeDatePicker": "Close",
            "dateIsSelected": [Function],
            "dateIsUnavailable": [Function],
            "enterKey": "Enter key",
            "escape": "Escape key",
            "hideKeyboardShortcutsPanel": "Close the shortcuts panel.",
            "homeEnd": "Home and end keys",
            "jumpToNextMonth": "Move forward to switch to the next month.",
            "jumpToPrevMonth": "Move backward to switch to the previous month.",
            "keyboardBackwardNavigationInstructions": "Navigate backward to interact with the calendar and select a date. Press the question mark key to get the keyboard shortcuts for changing dates.",
            "keyboardForwardNavigationInstructions": "Navigate forward to interact with the calendar and select a date. Press the question mark key to get the keyboard shortcuts for changing dates.",
            "keyboardShortcuts": "Keyboard Shortcuts",
            "leftArrowRightArrow": "Right and left arrow keys",
            "moveFocusByOneDay": "Move backward (left) and forward (right) by one day.",
            "moveFocusByOneMonth": "Switch months.",
            "moveFocusByOneWeek": "Move backward (up) and forward (down) by one week.",
            "moveFocustoStartAndEndOfWeek": "Go to the first or last day of a week.",
            "openThisPanel": "Open this panel.",
            "pageUpPageDown": "page up and page down keys",
            "questionMark": "Question mark",
            "returnFocusToInput": "Return to the date input field.",
            "roleDescription": "datepicker",
            "selectFocusedDate": "Select the date in focus.",
            "showKeyboardShortcutsPanel": "Open the keyboard shortcuts panel.",
            "upArrowDownArrow": "up and down arrow keys",
          }
        }
        placeholder="Date"
        readOnly={false}
        regular={false}
        renderCalendarInfo={null}
        renderDayContents={null}
        renderMonthElement={null}
        renderMonthText={null}
        renderNavNextButton={null}
        renderNavPrevButton={null}
        renderWeekHeaderElement={null}
        reopenPickerOnClearDate={false}
        required={false}
        screenReaderInputMessage=""
        showClearDate={false}
        showDefaultInputIcon={false}
        small={false}
        verticalHeight={null}
        verticalSpacing={22}
        weekDayFormat="dd"
        withFullScreenPortal={false}
        withPortal={false}
      />
    </fieldset>
    <label
      htmlFor="amount"
    >
      Amount: 
    </label>
    <fieldset
      className="expense-form__fieldset expense-form__amount"
    >
      <select
        onChange={[Function]}
        value="EUR"
      >
        <option
          value="EUR"
        >
          €
        </option>
        <option
          value="GBP"
        >
          £
        </option>
        <option
          value="USD"
        >
          $
        </option>
      </select>
      <input
        id="amount"
        onChange={[Function]}
        type="text"
        value=""
      />
    </fieldset>
    <button
      className="expense-form__submit"
      type="submit"
    >
      Confirm
    </button>
  </form>
  <footer
    className="expense-form__error-box"
    open={true}
  >
    <h3>
      Warning!
    </h3>
    <p>
      Error, you must provide a description and an amount
    </p>
    <button
      className="expense-form__error-box__close"
      onClick={[Function]}
      value="cancel"
    >
      Close
    </button>
  </footer>
</section>
`;

exports[`should render expense form correctly 1`] = `
<section>
  <form
    action=""
    className="expense-form"
    onSubmit={[Function]}
  >
    <label
      htmlFor="description"
    >
      Description: 
    </label>
    <input
      autoFocus={true}
      id="description"
      onChange={[Function]}
      type="text"
      value=""
    />
    <label
      htmlFor="note"
    >
      Note: 
    </label>
    <textarea
      id="note"
      onChange={[Function]}
      value=""
    />
    <fieldset
      className="expense-form__date expense-form__fieldset"
    >
      <withStyles(SingleDatePicker)
        anchorDirection="left"
        appendToBody={false}
        block={false}
        calendarInfoPosition="bottom"
        customCloseIcon={null}
        customInputIcon={null}
        date={"1970-01-01T00:00:00.000Z"}
        dayPickerNavigationInlineStyles={null}
        daySize={39}
        disableScroll={false}
        disabled={false}
        displayFormat={[Function]}
        enableOutsideDays={false}
        firstDayOfWeek={null}
        focused={false}
        hideKeyboardShortcutsPanel={false}
        horizontalMargin={0}
        horizontalMonthPadding={13}
        id="date"
        initialVisibleMonth={null}
        inputIconPosition="before"
        isDayBlocked={[Function]}
        isDayHighlighted={[Function]}
        isOutsideRange={[Function]}
        isRTL={false}
        keepFocusOnInput={false}
        keepOpenOnDateSelect={false}
        monthFormat="MMMM YYYY"
        navNext={null}
        navPosition="navPositionTop"
        navPrev={null}
        noBorder={false}
        numberOfMonths={1}
        onClose={[Function]}
        onDateChange={[Function]}
        onFocusChange={[Function]}
        onNextMonthClick={[Function]}
        onPrevMonthClick={[Function]}
        openDirection="down"
        orientation="horizontal"
        phrases={
          Object {
            "calendarLabel": "Calendar",
            "chooseAvailableDate": [Function],
            "clearDate": "Clear Date",
            "closeDatePicker": "Close",
            "dateIsSelected": [Function],
            "dateIsUnavailable": [Function],
            "enterKey": "Enter key",
            "escape": "Escape key",
            "hideKeyboardShortcutsPanel": "Close the shortcuts panel.",
            "homeEnd": "Home and end keys",
            "jumpToNextMonth": "Move forward to switch to the next month.",
            "jumpToPrevMonth": "Move backward to switch to the previous month.",
            "keyboardBackwardNavigationInstructions": "Navigate backward to interact with the calendar and select a date. Press the question mark key to get the keyboard shortcuts for changing dates.",
            "keyboardForwardNavigationInstructions": "Navigate forward to interact with the calendar and select a date. Press the question mark key to get the keyboard shortcuts for changing dates.",
            "keyboardShortcuts": "Keyboard Shortcuts",
            "leftArrowRightArrow": "Right and left arrow keys",
            "moveFocusByOneDay": "Move backward (left) and forward (right) by one day.",
            "moveFocusByOneMonth": "Switch months.",
            "moveFocusByOneWeek": "Move backward (up) and forward (down) by one week.",
            "moveFocustoStartAndEndOfWeek": "Go to the first or last day of a week.",
            "openThisPanel": "Open this panel.",
            "pageUpPageDown": "page up and page down keys",
            "questionMark": "Question mark",
            "returnFocusToInput": "Return to the date input field.",
            "roleDescription": "datepicker",
            "selectFocusedDate": "Select the date in focus.",
            "showKeyboardShortcutsPanel": "Open the keyboard shortcuts panel.",
            "upArrowDownArrow": "up and down arrow keys",
          }
        }
        placeholder="Date"
        readOnly={false}
        regular={false}
        renderCalendarInfo={null}
        renderDayContents={null}
        renderMonthElement={null}
        renderMonthText={null}
        renderNavNextButton={null}
        renderNavPrevButton={null}
        renderWeekHeaderElement={null}
        reopenPickerOnClearDate={false}
        required={false}
        screenReaderInputMessage=""
        showClearDate={false}
        showDefaultInputIcon={false}
        small={false}
        verticalHeight={null}
        verticalSpacing={22}
        weekDayFormat="dd"
        withFullScreenPortal={false}
        withPortal={false}
      />
    </fieldset>
    <label
      htmlFor="amount"
    >
      Amount: 
    </label>
    <fieldset
      className="expense-form__fieldset expense-form__amount"
    >
      <select
        onChange={[Function]}
        value="EUR"
      >
        <option
          value="EUR"
        >
          €
        </option>
        <option
          value="GBP"
        >
          £
        </option>
        <option
          value="USD"
        >
          $
        </option>
      </select>
      <input
        id="amount"
        onChange={[Function]}
        type="text"
        value=""
      />
    </fieldset>
    <button
      className="expense-form__submit"
      type="submit"
    >
      Confirm
    </button>
  </form>
</section>
`;

exports[`should render expense form with expense data 1`] = `
<section>
  <form
    action=""
    className="expense-form"
    onSubmit={[Function]}
  >
    <label
      htmlFor="description"
    >
      Description: 
    </label>
    <input
      autoFocus={true}
      id="description"
      onChange={[Function]}
      type="text"
      value="Food"
    />
    <label
      htmlFor="note"
    >
      Note: 
    </label>
    <textarea
      id="note"
      onChange={[Function]}
      value="Bought food for mastication"
    />
    <fieldset
      className="expense-form__date expense-form__fieldset"
    >
      <withStyles(SingleDatePicker)
        anchorDirection="left"
        appendToBody={false}
        block={false}
        calendarInfoPosition="bottom"
        customCloseIcon={null}
        customInputIcon={null}
        date={"2021-04-08T23:00:00.000Z"}
        dayPickerNavigationInlineStyles={null}
        daySize={39}
        disableScroll={false}
        disabled={false}
        displayFormat={[Function]}
        enableOutsideDays={false}
        firstDayOfWeek={null}
        focused={false}
        hideKeyboardShortcutsPanel={false}
        horizontalMargin={0}
        horizontalMonthPadding={13}
        id="date"
        initialVisibleMonth={null}
        inputIconPosition="before"
        isDayBlocked={[Function]}
        isDayHighlighted={[Function]}
        isOutsideRange={[Function]}
        isRTL={false}
        keepFocusOnInput={false}
        keepOpenOnDateSelect={false}
        monthFormat="MMMM YYYY"
        navNext={null}
        navPosition="navPositionTop"
        navPrev={null}
        noBorder={false}
        numberOfMonths={1}
        onClose={[Function]}
        onDateChange={[Function]}
        onFocusChange={[Function]}
        onNextMonthClick={[Function]}
        onPrevMonthClick={[Function]}
        openDirection="down"
        orientation="horizontal"
        phrases={
          Object {
            "calendarLabel": "Calendar",
            "chooseAvailableDate": [Function],
            "clearDate": "Clear Date",
            "closeDatePicker": "Close",
            "dateIsSelected": [Function],
            "dateIsUnavailable": [Function],
            "enterKey": "Enter key",
            "escape": "Escape key",
            "hideKeyboardShortcutsPanel": "Close the shortcuts panel.",
            "homeEnd": "Home and end keys",
            "jumpToNextMonth": "Move forward to switch to the next month.",
            "jumpToPrevMonth": "Move backward to switch to the previous month.",
            "keyboardBackwardNavigationInstructions": "Navigate backward to interact with the calendar and select a date. Press the question mark key to get the keyboard shortcuts for changing dates.",
            "keyboardForwardNavigationInstructions": "Navigate forward to interact with the calendar and select a date. Press the question mark key to get the keyboard shortcuts for changing dates.",
            "keyboardShortcuts": "Keyboard Shortcuts",
            "leftArrowRightArrow": "Right and left arrow keys",
            "moveFocusByOneDay": "Move backward (left) and forward (right) by one day.",
            "moveFocusByOneMonth": "Switch months.",
            "moveFocusByOneWeek": "Move backward (up) and forward (down) by one week.",
            "moveFocustoStartAndEndOfWeek": "Go to the first or last day of a week.",
            "openThisPanel": "Open this panel.",
            "pageUpPageDown": "page up and page down keys",
            "questionMark": "Question mark",
            "returnFocusToInput": "Return to the date input field.",
            "roleDescription": "datepicker",
            "selectFocusedDate": "Select the date in focus.",
            "showKeyboardShortcutsPanel": "Open the keyboard shortcuts panel.",
            "upArrowDownArrow": "up and down arrow keys",
          }
        }
        placeholder="Date"
        readOnly={false}
        regular={false}
        renderCalendarInfo={null}
        renderDayContents={null}
        renderMonthElement={null}
        renderMonthText={null}
        renderNavNextButton={null}
        renderNavPrevButton={null}
        renderWeekHeaderElement={null}
        reopenPickerOnClearDate={false}
        required={false}
        screenReaderInputMessage=""
        showClearDate={false}
        showDefaultInputIcon={false}
        small={false}
        verticalHeight={null}
        verticalSpacing={22}
        weekDayFormat="dd"
        withFullScreenPortal={false}
        withPortal={false}
      />
    </fieldset>
    <label
      htmlFor="amount"
    >
      Amount: 
    </label>
    <fieldset
      className="expense-form__fieldset expense-form__amount"
    >
      <select
        onChange={[Function]}
        value="EUR"
      >
        <option
          value="EUR"
        >
          €
        </option>
        <option
          value="GBP"
        >
          £
        </option>
        <option
          value="USD"
        >
          $
        </option>
      </select>
      <input
        id="amount"
        onChange={[Function]}
        type="text"
        value="10.50"
      />
    </fieldset>
    <button
      className="expense-form__submit"
      type="submit"
    >
      Confirm
    </button>
  </form>
</section>
`;
