// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should render expense list filters correctly 1`] = `
<header
  className="filters"
>
  <Input
    className="filters__search"
    id="search-term"
    label="Search"
    onChange={[MockFunction]}
    type="search"
  />
  <button
    className="filters__button"
    data-filters-visible={false}
    onClick={[Function]}
  >
    Filters
  </button>
  <fieldset
    className="filters__options"
    data-filters-visible={false}
  >
    <div>
      <_default
        id="sort-expenses"
        label="Sort"
        onChange={[Function]}
        options={
          Array [
            Object {
              "title": "By Newest",
              "value": "byNewest",
            },
            Object {
              "title": "By Oldest",
              "value": "byOldest",
            },
            Object {
              "title": "Amount Descending",
              "value": "byAmountDescending",
            },
            Object {
              "title": "Amount Ascending",
              "value": "byAmountAscending",
            },
            Object {
              "title": "Title Descending",
              "value": "byTitleDescending",
            },
            Object {
              "title": "Title Ascending",
              "value": "byTitleAscending",
            },
          ]
        }
      />
    </div>
    <div>
      <r
        allowSameDay={false}
        className="expense-filters__dates__input"
        customInput={<ForwardRef />}
        customTimeInput={null}
        dateFormat="dd/MM/yyyy"
        dateFormatCalendar="LLLL yyyy"
        disabled={false}
        disabledKeyboardNavigation={false}
        dropdownMode="scroll"
        enableTabLoop={true}
        excludeScrollbar={true}
        focusSelectedMonth={false}
        id="start-date"
        monthsShown={1}
        nextMonthButtonLabel="Next Month"
        nextYearButtonLabel="Next Year"
        onBlur={[Function]}
        onCalendarClose={[Function]}
        onCalendarOpen={[Function]}
        onChange={[Function]}
        onClickOutside={[Function]}
        onFocus={[Function]}
        onInputClick={[Function]}
        onInputError={[Function]}
        onKeyDown={[Function]}
        onMonthChange={[Function]}
        onSelect={[Function]}
        onYearChange={[Function]}
        preventOpenOnFocus={false}
        previousMonthButtonLabel="Previous Month"
        previousYearButtonLabel="Previous Year"
        readOnly={false}
        renderDayContents={[Function]}
        selectsStart={true}
        shouldCloseOnSelect={true}
        showFourColumnMonthYearPicker={false}
        showFullMonthYearPicker={false}
        showMonthYearPicker={false}
        showPopperArrow={true}
        showPreviousMonths={false}
        showQuarterYearPicker={false}
        showTimeInput={false}
        showTimeSelect={false}
        showTwoColumnMonthYearPicker={false}
        showYearPicker={false}
        strictParsing={false}
        timeCaption="Time"
        timeInputLabel="Time"
        timeIntervals={30}
        withPortal={false}
        yearItemNumber={12}
      />
    </div>
    <div>
      <r
        allowSameDay={false}
        className="expense-filters__dates__input"
        customInput={<ForwardRef />}
        customTimeInput={null}
        dateFormat="dd/MM/yyyy"
        dateFormatCalendar="LLLL yyyy"
        disabled={false}
        disabledKeyboardNavigation={false}
        dropdownMode="scroll"
        enableTabLoop={true}
        excludeScrollbar={true}
        focusSelectedMonth={false}
        id="end-date"
        monthsShown={1}
        nextMonthButtonLabel="Next Month"
        nextYearButtonLabel="Next Year"
        onBlur={[Function]}
        onCalendarClose={[Function]}
        onCalendarOpen={[Function]}
        onChange={[Function]}
        onClickOutside={[Function]}
        onFocus={[Function]}
        onInputClick={[Function]}
        onInputError={[Function]}
        onKeyDown={[Function]}
        onMonthChange={[Function]}
        onSelect={[Function]}
        onYearChange={[Function]}
        preventOpenOnFocus={false}
        previousMonthButtonLabel="Previous Month"
        previousYearButtonLabel="Previous Year"
        readOnly={false}
        renderDayContents={[Function]}
        selectsEnd={true}
        shouldCloseOnSelect={true}
        showFourColumnMonthYearPicker={false}
        showFullMonthYearPicker={false}
        showMonthYearPicker={false}
        showPopperArrow={true}
        showPreviousMonths={false}
        showQuarterYearPicker={false}
        showTimeInput={false}
        showTimeSelect={false}
        showTwoColumnMonthYearPicker={false}
        showYearPicker={false}
        strictParsing={false}
        timeCaption="Time"
        timeInputLabel="Time"
        timeIntervals={30}
        withPortal={false}
        yearItemNumber={12}
      />
    </div>
  </fieldset>
</header>
`;

exports[`should render expense list filters with alt data correctly 1`] = `
<header
  className="filters"
>
  <Input
    className="filters__search"
    id="search-term"
    label="Search"
    onChange={[MockFunction]}
    type="search"
  />
  <button
    className="filters__button"
    data-filters-visible={false}
    onClick={[Function]}
  >
    Filters
  </button>
  <fieldset
    className="filters__options"
    data-filters-visible={false}
  >
    <div>
      <_default
        id="sort-expenses"
        label="Sort"
        onChange={[Function]}
        options={
          Array [
            Object {
              "title": "By Newest",
              "value": "byNewest",
            },
            Object {
              "title": "By Oldest",
              "value": "byOldest",
            },
            Object {
              "title": "Amount Descending",
              "value": "byAmountDescending",
            },
            Object {
              "title": "Amount Ascending",
              "value": "byAmountAscending",
            },
            Object {
              "title": "Title Descending",
              "value": "byTitleDescending",
            },
            Object {
              "title": "Title Ascending",
              "value": "byTitleAscending",
            },
          ]
        }
      />
    </div>
    <div>
      <r
        allowSameDay={false}
        className="expense-filters__dates__input"
        customInput={<ForwardRef />}
        customTimeInput={null}
        dateFormat="dd/MM/yyyy"
        dateFormatCalendar="LLLL yyyy"
        disabled={false}
        disabledKeyboardNavigation={false}
        dropdownMode="scroll"
        enableTabLoop={true}
        endDate={2021-09-20T00:00:00.000Z}
        excludeScrollbar={true}
        focusSelectedMonth={false}
        id="start-date"
        monthsShown={1}
        nextMonthButtonLabel="Next Month"
        nextYearButtonLabel="Next Year"
        onBlur={[Function]}
        onCalendarClose={[Function]}
        onCalendarOpen={[Function]}
        onChange={[Function]}
        onClickOutside={[Function]}
        onFocus={[Function]}
        onInputClick={[Function]}
        onInputError={[Function]}
        onKeyDown={[Function]}
        onMonthChange={[Function]}
        onSelect={[Function]}
        onYearChange={[Function]}
        preventOpenOnFocus={false}
        previousMonthButtonLabel="Previous Month"
        previousYearButtonLabel="Previous Year"
        readOnly={false}
        renderDayContents={[Function]}
        selected={2021-09-05T00:00:00.000Z}
        selectsStart={true}
        shouldCloseOnSelect={true}
        showFourColumnMonthYearPicker={false}
        showFullMonthYearPicker={false}
        showMonthYearPicker={false}
        showPopperArrow={true}
        showPreviousMonths={false}
        showQuarterYearPicker={false}
        showTimeInput={false}
        showTimeSelect={false}
        showTwoColumnMonthYearPicker={false}
        showYearPicker={false}
        startDate={2021-09-05T00:00:00.000Z}
        strictParsing={false}
        timeCaption="Time"
        timeInputLabel="Time"
        timeIntervals={30}
        withPortal={false}
        yearItemNumber={12}
      />
    </div>
    <div>
      <r
        allowSameDay={false}
        className="expense-filters__dates__input"
        customInput={<ForwardRef />}
        customTimeInput={null}
        dateFormat="dd/MM/yyyy"
        dateFormatCalendar="LLLL yyyy"
        disabled={false}
        disabledKeyboardNavigation={false}
        dropdownMode="scroll"
        enableTabLoop={true}
        endDate={2021-09-20T00:00:00.000Z}
        excludeScrollbar={true}
        focusSelectedMonth={false}
        id="end-date"
        monthsShown={1}
        nextMonthButtonLabel="Next Month"
        nextYearButtonLabel="Next Year"
        onBlur={[Function]}
        onCalendarClose={[Function]}
        onCalendarOpen={[Function]}
        onChange={[Function]}
        onClickOutside={[Function]}
        onFocus={[Function]}
        onInputClick={[Function]}
        onInputError={[Function]}
        onKeyDown={[Function]}
        onMonthChange={[Function]}
        onSelect={[Function]}
        onYearChange={[Function]}
        preventOpenOnFocus={false}
        previousMonthButtonLabel="Previous Month"
        previousYearButtonLabel="Previous Year"
        readOnly={false}
        renderDayContents={[Function]}
        selected={2021-09-20T00:00:00.000Z}
        selectsEnd={true}
        shouldCloseOnSelect={true}
        showFourColumnMonthYearPicker={false}
        showFullMonthYearPicker={false}
        showMonthYearPicker={false}
        showPopperArrow={true}
        showPreviousMonths={false}
        showQuarterYearPicker={false}
        showTimeInput={false}
        showTimeSelect={false}
        showTwoColumnMonthYearPicker={false}
        showYearPicker={false}
        startDate={2021-09-05T00:00:00.000Z}
        strictParsing={false}
        timeCaption="Time"
        timeInputLabel="Time"
        timeIntervals={30}
        withPortal={false}
        yearItemNumber={12}
      />
    </div>
  </fieldset>
</header>
`;
